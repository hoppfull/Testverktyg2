<Application x:Class="AdminApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:AdminApp"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <SolidColorBrush x:Key="color_LightLightMain" Color="#D2E8F3" />
        <SolidColorBrush x:Key="color_MidLightMain" Color="#FFB2E5FF" />
        <SolidColorBrush x:Key="color_NormalLightMain" Color="#8ABBD3" />
        <SolidColorBrush x:Key="color_NormalDarkMain" Color="#FF2D94C7" />
        <SolidColorBrush x:Key="color_MidDarkMain" Color="#34708D" />
        <SolidColorBrush x:Key="color_DarkDarkMain" Color="#1C536D" />
        <SolidColorBrush x:Key="color_LowDarkMain" Color="#FF376378" />
        <SolidColorBrush x:Key="color_Warning" Color="Orange" />
        <SolidColorBrush x:Key="color_Returned" Color="Coral" />

        <!-- Control Template for ComboBox-->
        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource color_MidLightMain}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource color_MidLightMain}" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="{StaticResource color_MidLightMain}" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource color_NormalDarkMain}" />

                <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="{StaticResource color_MidLightMain}"
            VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource color_LowDarkMain}"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource color_LowDarkMain}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="{StaticResource color_LightLightMain}"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource color_MidLightMain}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource color_LowDarkMain}"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource color_MidLightMain}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource color_DarkDarkMain}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="{StaticResource color_LightLightMain}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="CheckBox">
            <Setter Property="Background" Value="{StaticResource color_MidLightMain}" />
            <Setter Property="Foreground" Value="{StaticResource color_MidDarkMain}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="5" />
        </Style>

        <Style TargetType="RadioButton">
            <Setter Property="Background" Value="{StaticResource color_MidLightMain}" />
            <Setter Property="Foreground" Value="{StaticResource color_MidDarkMain}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="5" />
        </Style>

        <Style x:Key="Key_cbx_Normal"  TargetType="{x:Type ComboBox}">
            <Setter Property="Height" Value="34" />
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="{StaticResource color_DarkDarkMain}"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>

                            <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="{StaticResource color_MidLightMain}" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource color_LightLightMain}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource color_LightLightMain}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ListBoxItem}">
            <!-- Possibly other setters -->
            <Setter Property="Focusable" Value="False" />
            <Setter Property="BorderThickness" Value="1,1,0,1" />
            <Setter Property="Background" Value="{StaticResource color_LightLightMain}" />
            <Setter Property="BorderBrush" Value="{StaticResource color_NormalDarkMain}" />
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="Border" Padding="2" SnapsToDevicePixels="true" BorderThickness="1,0,0,1" Margin="0,0,0,4" BorderBrush="{StaticResource color_NormalLightMain}" Background="{StaticResource color_LightLightMain}">
                            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource color_LightLightMain}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="Key_lvw_Base" TargetType="ListView">
            <Setter Property="BorderThickness" Value="1,1,0,1" />
            <Setter Property="BorderBrush" Value="{StaticResource color_DarkDarkMain}" />
            <Setter Property="SelectionMode" Value="Single" />
            <Setter Property="Background" Value="{StaticResource color_LowDarkMain}" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListView">
                        <Border Name="Border" Background="{StaticResource color_LowDarkMain}">
                            <ScrollViewer>
                                <ItemsPresenter />
                            </ScrollViewer>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource color_LowDarkMain}" />
                                <Setter Property="Foreground" Value="{StaticResource color_LightLightMain}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Key_lvw_Item" TargetType="Label">
            <Setter Property="BorderThickness" Value="1,0,0,0" />
            <Setter Property="Foreground" Value="{StaticResource color_MidLightMain}" />
            <Setter Property="BorderBrush" Value="{StaticResource color_LowDarkMain}" />
        </Style>

        <Style x:Key="Key_lbl_Header" TargetType="Label">
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="26" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="{StaticResource color_LightLightMain}" />
        </Style>

        <Style x:Key="Key_lbl_Header2" TargetType="Label">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Margin" Value="0,3" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="Foreground" Value="{StaticResource color_MidLightMain}" />
        </Style>

        <Style x:Key="Key_lbl_TabControl" TargetType="Label">
            <Setter Property="Margin" Value="-12, -8" />
            <Setter Property="Padding" Value="20, 15" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Foreground" Value="{StaticResource color_LightLightMain}" />
        </Style>


        <Style x:Key="Key_tbx_LoginField" TargetType="TextBox">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="10,0,0,0" />
            <Setter Property="BorderBrush" Value="{StaticResource color_MidDarkMain}" />
            <Setter Property="Foreground" Value="{StaticResource color_MidDarkMain}" />
            <Setter Property="Background" Value="{StaticResource color_MidLightMain}" />
        </Style>

        <Style x:Key="Key_tbx_TextField" TargetType="TextBox" BasedOn="{StaticResource Key_tbx_LoginField}">
            <Setter Property="Height" Value="35" />
            <Setter Property="MinWidth" Value="200" />
            <Setter Property="Margin" Value="0, 1" />
        </Style>

        <Style x:Key="Key_tbl_AdminAppPlaceholderBase" TargetType="TextBlock">
            <Setter Property="Margin" Value="12,0,0,0" />
            <Setter Property="Foreground" Value="{StaticResource color_NormalDarkMain}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="IsHitTestVisible" Value="False" />
            <Setter Property="FontSize" Value="16" />
        </Style>

        <Style x:Key="key_tbl_NewTestDefinitionName" TargetType="TextBlock" BasedOn="{StaticResource Key_tbl_AdminAppPlaceholderBase}">
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text, ElementName=tbx_NewTestDefinitionName}" Value="">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Key_tbl_TeacherChangePassword" TargetType="TextBlock" BasedOn="{StaticResource Key_tbl_AdminAppPlaceholderBase}">
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text, ElementName=tbx_ChangePassword}" Value="">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="Key_tbl_TeacherRepeatChangePassword" TargetType="TextBlock" BasedOn="{StaticResource Key_tbl_AdminAppPlaceholderBase}">
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text, ElementName=tbx_RepeatChangePassword}" Value="">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Key_tbl_TeacherChangeEmail" TargetType="TextBlock" BasedOn="{StaticResource Key_tbl_AdminAppPlaceholderBase}">
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text, ElementName=tbx_ChangeEmail}" Value="">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="Key_tbl_AdminChangePassword" TargetType="TextBlock" BasedOn="{StaticResource Key_tbl_AdminAppPlaceholderBase}">
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text, ElementName=tbx_AdminChangePassword}" Value="">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Key_tbl_FilterTestName" TargetType="TextBlock" BasedOn="{StaticResource Key_tbl_AdminAppPlaceholderBase}">
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text, ElementName=tbx_FilterTestName}" Value="">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="Key_tbl_AdminRepeatChangePassword" TargetType="TextBlock" BasedOn="{StaticResource Key_tbl_AdminAppPlaceholderBase}">
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text, ElementName=tbx_AdminRepeatChangePassword}" Value="">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Key_tbl_AdminChangeEmail" TargetType="TextBlock" BasedOn="{StaticResource Key_tbl_AdminAppPlaceholderBase}">
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text, ElementName=tbx_AdminChangeEmail}" Value="">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Key_tbl_AddSubjectName" TargetType="TextBlock" BasedOn="{StaticResource Key_tbl_AdminAppPlaceholderBase}">
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text, ElementName=tbx_AddSubjectName}" Value="">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Key_tbl_AddUserName" TargetType="TextBlock" BasedOn="{StaticResource Key_tbl_AdminAppPlaceholderBase}">
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text, ElementName=tbx_AddUserName}" Value="">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Key_tbl_AddUserEmail" TargetType="TextBlock" BasedOn="{StaticResource Key_tbl_AdminAppPlaceholderBase}">
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text, ElementName=tbx_AddUserEmail}" Value="">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Key_tbl_EmailPlaceholder" TargetType="TextBlock" BasedOn="{StaticResource Key_tbl_AdminAppPlaceholderBase}">
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text, ElementName=tbx_LoginEmail}" Value="">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Key_tbl_PasswordPlaceholder" TargetType="TextBlock" BasedOn="{StaticResource Key_tbl_AdminAppPlaceholderBase}">
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text, ElementName=tbx_LoginPassword}" Value="">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button">
            <Setter Property="Foreground" Value="{StaticResource color_LightLightMain}" />
            <Setter Property="Background" Value="{StaticResource color_DarkDarkMain}" />
            <Setter Property="BorderBrush" Value="{StaticResource color_MidDarkMain}" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Height" Value="34" />
            <Setter Property="Margin" Value="2, 1" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="btn_Template" Padding="10,5" Background="{TemplateBinding Background}">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="btn_Template" Property="Opacity" Value="0.4" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource color_MidDarkMain}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TabControl">
            <Setter Property="BorderThickness" Value="0,0,0,1" />
            <Setter Property="BorderBrush" Value="{StaticResource color_NormalDarkMain}" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Padding" Value="0" />
        </Style>


        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border 
            Name="Border"
            Margin="-3,-2,2,0" 
            Background="{StaticResource color_DarkDarkMain}"
            Opacity="0.7"
            BorderBrush="{StaticResource color_MidDarkMain}" 
            BorderThickness="1,1,1,1" 
            Cursor="Hand"
            CornerRadius="2,2,0,0" >
                                <ContentPresenter x:Name="ContentSite"
              VerticalAlignment="Center"
              HorizontalAlignment="Center"
              ContentSource="Header"
              Margin="12,2,12,2"
              RecognizesAccessKey="True"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource color_NormalDarkMain}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                                <Setter TargetName="Border" Property="Opacity" Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ListViewItemOptionStyle" TargetType="ListViewItem">
            <Setter Property="Background" Value="{StaticResource color_MidDarkMain}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="Bd" BorderBrush="{StaticResource color_DarkDarkMain}" BorderThickness="1,0,0,1" 
                                Margin="1,2"
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="True">
                            <ContentPresenter 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource color_MidLightMain}" />
                            </Trigger>
                            <!--<DataTrigger Binding="{Binding item5}" Value="False">
                                <Setter Property="Background" Value="Red"></Setter>
                            </DataTrigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Background" Value="{StaticResource color_DarkDarkMain}" />
                        <Setter Property="BorderBrush" Value="{StaticResource color_MidDarkMain}" />
                        <Setter Property="Foreground" Value="{StaticResource color_LightLightMain}" />
                    </MultiTrigger.Setters>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

    </Application.Resources>
</Application>
